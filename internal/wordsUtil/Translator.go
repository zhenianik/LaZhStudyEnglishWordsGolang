package wordsUtil

import (
	"encoding/json"
	"fmt"
	"github.com/zhenianik/LaZhStudyEnglishWordsGolang/config"
	"log"
	"net/http"
)

const sourceLang = "en"
const targetLang = "ru"

func Translate(msg string) string {

	if msg == "" {
		return ""
	}

	result := ""
	cfg, _ := config.GetConfig()

	s := cfg.TranslateUrl + "&sl=" + sourceLang + "&tl=" + targetLang + "&dt=t&q=" + msg + "&ie=UTF-8&oe=UTF-8"

	resp, err := http.Get(s)
	if err != nil {
		log.Printf("ошибка подключения к переводчику: %v", err)
	}

	type AutoGenerated []interface{}
	var input AutoGenerated
	err = json.NewDecoder(resp.Body).Decode(&input)
	if err != nil {
		log.Printf("ошибка парсинга ответа от переводчика: %v", err)
	}
	translateArr := input[0]
	listSlice, ok := translateArr.([]interface{})
	if !ok {
		log.Printf("Argument is not a slice")
	}
	for _, v := range listSlice {
		listSlice2, ok2 := v.([]interface{})
		if !ok2 {
			log.Printf("Argument is not a slice")
		}
		for _, v2 := range listSlice2 {
			result = fmt.Sprintf("%v", v2)
			break
		}
		break
	}

	return result
}
